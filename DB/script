-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public."User"
(
    user_id serial NOT NULL,
    name character varying(50) NOT NULL,
    email character varying(100) NOT NULL,
    role_id integer NOT NULL,
    password character varying(300) NOT NULL,
    actived bit NOT NULL DEFAULT b'1',
    deleted bit NOT NULL DEFAULT b'0',
    date_created date NOT NULL,
    PRIMARY KEY (user_id)
);

CREATE TABLE IF NOT EXISTS public."Role"
(
    role_id serial NOT NULL,
    name character varying(50) NOT NULL,
    deleted bit NOT NULL DEFAULT b'0',
    date_created date NOT NULL,
    PRIMARY KEY (role_id)
);

CREATE TABLE IF NOT EXISTS public."Word"
(
    word_id serial NOT NULL,
    word character varying(100) NOT NULL,
    category_id integer NOT NULL,
    date_created date NOT NULL,
    deleted bit NOT NULL DEFAULT b'0',
    PRIMARY KEY (word_id)
);

CREATE TABLE IF NOT EXISTS public."Category"
(
    category_id serial NOT NULL,
    name character varying(100) NOT NULL,
    user_id integer NOT NULL,
    deleted bit NOT NULL DEFAULT b'0',
    date_created date NOT NULL,
    PRIMARY KEY (category_id)
);

CREATE TABLE IF NOT EXISTS public."Institution"
(
    institution_id serial NOT NULL,
    legal_id character varying(30) NOT NULL,
    abbreviation character varying(10) NOT NULL,
    name character varying(50) NOT NULL,
    deleted bit NOT NULL DEFAULT b'0',
    date_created date NOT NULL,
    PRIMARY KEY (institution_id)
);

CREATE TABLE IF NOT EXISTS public."FavoriteInstitution"
(
    user_id integer NOT NULL,
    institution_id integer NOT NULL,
    PRIMARY KEY (user_id, institution_id)
);

CREATE TABLE IF NOT EXISTS public."Action"
(
    action_id serial NOT NULL,
    action character varying(100) NOT NULL,
    deleted bit NOT NULL DEFAULT b'0',
    date_created date NOT NULL,
    PRIMARY KEY (action_id)
);

CREATE TABLE IF NOT EXISTS public."Actions_role"
(
    role_id integer NOT NULL,
    action_id integer NOT NULL,
    PRIMARY KEY (role_id, action_id)
);

CREATE TABLE IF NOT EXISTS public."Tender"
(
    tender_id serial NOT NULL,
    id character varying(50) NOT NULL,
    description character varying(1000) NOT NULL,
    publication_date date NOT NULL,
    opening_date date NOT NULL,
    status character varying(100) NOT NULL,
    deleted bit NOT NULL DEFAULT b'0',
    institution_id integer NOT NULL,
    close_date date NOT NULL,
    budget character varying(50) NOT NULL,
    regions character varying(500)[] NOT NULL,
    PRIMARY KEY (tender_id)
);

CREATE TABLE IF NOT EXISTS public."TenderSaved"
(
    user_id integer NOT NULL,
    tender_id integer NOT NULL,
    PRIMARY KEY (user_id, tender_id)
);

CREATE TABLE IF NOT EXISTS public."TenderHistory"
(
    tender_history_id serial NOT NULL,
    tender_id integer NOT NULL,
    user_id integer NOT NULL,
    date date NOT NULL,
    deleted bit NOT NULL DEFAULT b'0',
    PRIMARY KEY (tender_history_id)
);

CREATE TABLE IF NOT EXISTS public."Notification"
(
    notification_id serial NOT NULL,
    user_id integer NOT NULL,
    date_created date NOT NULL,
    message character varying(2000) NOT NULL,
    deleted bit NOT NULL DEFAULT b'0',
    sent bit NOT NULL DEFAULT b'0',
    PRIMARY KEY (notification_id)
);

CREATE TABLE IF NOT EXISTS public."TenderNotification"
(
    teder_notification_id integer NOT NULL,
    tender_id integer NOT NULL,
    PRIMARY KEY (teder_notification_id)
);

CREATE TABLE IF NOT EXISTS public."NewAccountNotification"
(
    "new_Account_notification_id" integer NOT NULL,
    PRIMARY KEY ("new_Account_notification_id")
);

ALTER TABLE IF EXISTS public."User"
    ADD FOREIGN KEY (role_id)
    REFERENCES public."Role" (role_id) MATCH SIMPLE
    ON UPDATE SET DEFAULT
    ON DELETE CASCADE
    NOT VALID;


ALTER TABLE IF EXISTS public."Word"
    ADD FOREIGN KEY (category_id)
    REFERENCES public."Category" (category_id) MATCH SIMPLE
    ON UPDATE SET DEFAULT
    ON DELETE CASCADE
    NOT VALID;


ALTER TABLE IF EXISTS public."Category"
    ADD FOREIGN KEY (user_id)
    REFERENCES public."User" (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE
    NOT VALID;


ALTER TABLE IF EXISTS public."FavoriteInstitution"
    ADD FOREIGN KEY (user_id)
    REFERENCES public."User" (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE
    NOT VALID;


ALTER TABLE IF EXISTS public."FavoriteInstitution"
    ADD FOREIGN KEY (institution_id)
    REFERENCES public."Institution" (institution_id) MATCH SIMPLE
    ON UPDATE SET DEFAULT
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Actions_role"
    ADD FOREIGN KEY (role_id)
    REFERENCES public."Role" (role_id) MATCH SIMPLE
    ON UPDATE SET DEFAULT
    ON DELETE CASCADE
    NOT VALID;


ALTER TABLE IF EXISTS public."Actions_role"
    ADD FOREIGN KEY (action_id)
    REFERENCES public."Action" (action_id) MATCH SIMPLE
    ON UPDATE SET DEFAULT
    ON DELETE CASCADE
    NOT VALID;


ALTER TABLE IF EXISTS public."Tender"
    ADD FOREIGN KEY (institution_id)
    REFERENCES public."Institution" (institution_id) MATCH SIMPLE
    ON UPDATE SET DEFAULT
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."TenderSaved"
    ADD FOREIGN KEY (user_id)
    REFERENCES public."User" (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE
    NOT VALID;


ALTER TABLE IF EXISTS public."TenderSaved"
    ADD FOREIGN KEY (tender_id)
    REFERENCES public."Tender" (tender_id) MATCH SIMPLE
    ON UPDATE SET DEFAULT
    ON DELETE CASCADE
    NOT VALID;


ALTER TABLE IF EXISTS public."TenderHistory"
    ADD FOREIGN KEY (user_id)
    REFERENCES public."User" (user_id) MATCH SIMPLE
    ON UPDATE SET DEFAULT
    ON DELETE CASCADE
    NOT VALID;


ALTER TABLE IF EXISTS public."TenderHistory"
    ADD FOREIGN KEY (tender_id)
    REFERENCES public."Tender" (tender_id) MATCH SIMPLE
    ON UPDATE SET DEFAULT
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Notification"
    ADD FOREIGN KEY (user_id)
    REFERENCES public."User" (user_id) MATCH SIMPLE
    ON UPDATE SET DEFAULT
    ON DELETE CASCADE
    NOT VALID;


ALTER TABLE IF EXISTS public."TenderNotification"
    ADD FOREIGN KEY (tender_id)
    REFERENCES public."Tender" (tender_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."TenderNotification"
    ADD FOREIGN KEY (teder_notification_id)
    REFERENCES public."Notification" (notification_id) MATCH SIMPLE
    ON UPDATE SET DEFAULT
    ON DELETE CASCADE
    NOT VALID;


ALTER TABLE IF EXISTS public."NewAccountNotification"
    ADD FOREIGN KEY ("new_Account_notification_id")
    REFERENCES public."Notification" (notification_id) MATCH SIMPLE
    ON UPDATE SET DEFAULT
    ON DELETE CASCADE
    NOT VALID;

END;